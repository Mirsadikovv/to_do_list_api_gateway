definitions:
  admin_service.AdminLoginRequest:
    properties:
      user_login:
        type: string
      user_password:
        type: string
    type: object
  admin_service.AdminLoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  admin_service.AdminRegisterConfRequest:
    properties:
      Admin:
        items:
          $ref: '#/definitions/admin_service.CreateAdmin'
        type: array
      mail:
        type: string
      otp:
        type: string
    type: object
  admin_service.AdminRegisterRequest:
    properties:
      mail:
        type: string
    type: object
  admin_service.CreateAdmin:
    properties:
      birthday:
        type: string
      email:
        type: string
      fullname:
        type: string
      gender:
        type: string
      phone:
        type: string
      user_password:
        type: string
    type: object
  admin_service.UpdateAdmin:
    properties:
      birthday:
        type: string
      email:
        type: string
      fullname:
        type: string
      gender:
        type: string
      id:
        type: string
      phone:
        type: string
    type: object
  models.Response:
    properties:
      id: {}
    type: object
  models.ResponseError:
    properties:
      error: {}
    type: object
  user_service.CreateUser:
    properties:
      birthday:
        type: string
      email:
        type: string
      finished_at:
        type: string
      fullname:
        type: string
      gender:
        type: string
      group_id:
        type: string
      paid_sum:
        type: number
      phone:
        type: string
      started_at:
        type: string
      user_password:
        type: string
    type: object
  user_service.UpdateUser:
    properties:
      birthday:
        type: string
      email:
        type: string
      finished_at:
        type: string
      fullname:
        type: string
      gender:
        type: string
      group_id:
        type: string
      id:
        type: string
      paid_sum:
        type: number
      phone:
        type: string
      started_at:
        type: string
    type: object
  user_service.UserLoginRequest:
    properties:
      user_login:
        type: string
      user_password:
        type: string
    type: object
  user_service.UserLoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  user_service.UserRegisterConfRequest:
    properties:
      User:
        items:
          $ref: '#/definitions/user_service.CreateUser'
        type: array
      mail:
        type: string
      otp:
        type: string
    type: object
  user_service.UserRegisterRequest:
    properties:
      mail:
        type: string
    type: object
info:
  contact: {}
  description: This is a CRM celler server.
  title: Swagger CRM system API
  version: "1.0"
paths:
  /v1/admin/change_password:
    patch:
      consumes:
      - application/json
      description: API for Updating admines
      parameters:
      - description: admin
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin_service.UpdateAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update admin
      tags:
      - admin
  /v1/admin/create:
    post:
      consumes:
      - application/json
      description: API for creating admines
      parameters:
      - description: admin
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin_service.CreateAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create admin
      tags:
      - admin
  /v1/admin/delete/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete admin
      tags:
      - admin
  /v1/admin/get/{id}:
    get:
      consumes:
      - application/json
      description: API for getting admin
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get admin
      tags:
      - admin
  /v1/admin/getall:
    get:
      consumes:
      - application/json
      description: API for getting all admines
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get all admines
      tags:
      - admin
  /v1/admin/login:
    post:
      consumes:
      - application/json
      description: Admin login
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/admin_service.AdminLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/admin_service.AdminLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Admin login
      tags:
      - admin
  /v1/admin/register:
    post:
      consumes:
      - application/json
      description: Admin register
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/admin_service.AdminRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Admin register
      tags:
      - admin
  /v1/admin/register-confirm:
    post:
      consumes:
      - application/json
      description: Admin register
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/admin_service.AdminRegisterConfRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/admin_service.AdminLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Admin register
      tags:
      - admin
  /v1/admin/update:
    put:
      consumes:
      - application/json
      description: API for Updating admins
      parameters:
      - description: admin
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/admin_service.UpdateAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update admin
      tags:
      - admin
  /v1/user/change_password:
    patch:
      consumes:
      - application/json
      description: API for Updating useres
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - user
  /v1/user/create:
    post:
      consumes:
      - application/json
      description: API for creating useres
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user_service.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - user
  /v1/user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - user
  /v1/user/get/{id}:
    get:
      consumes:
      - application/json
      description: API for getting user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - user
  /v1/user/getall:
    get:
      consumes:
      - application/json
      description: API for getting all useres
      parameters:
      - description: search
        in: query
        name: search
        type: string
      - description: page
        in: query
        name: page
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get all useres
      tags:
      - user
  /v1/user/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/user_service.UserLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_service.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User login
      tags:
      - user
  /v1/user/register:
    post:
      consumes:
      - application/json
      description: User register
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/user_service.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User register
      tags:
      - user
  /v1/user/register-confirm:
    post:
      consumes:
      - application/json
      description: User register
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/user_service.UserRegisterConfRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_service.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User register
      tags:
      - user
  /v1/user/update:
    put:
      consumes:
      - application/json
      description: API for Updating useres
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user_service.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
